[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "phylib"
dynamic = ["version"]
description = "Ephys data analysis for thousands of channels"
readme = "README.md"
license = { text = "BSD" }
authors = [{ name = "Cyrille Rossant", email = "cyrille.rossant@gmail.com" }]
keywords = ["phy", "data analysis", "electrophysiology", "neuroscience"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Framework :: IPython",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.9"
dependencies = [
    "numpy",
    "scipy",
    "dask",
    "requests",
    "tqdm",
    "toolz",
    "joblib",
    "mtscomp",
    "responses>=0.25.7",
]


[project.urls]
Homepage = "https://github.com/cortex-lab/phylib"
Repository = "https://github.com/cortex-lab/phylib"

[project.optional-dependencies]
dev = ["pytest", "pytest-cov", "ruff", "coverage", "coveralls", "responses"]
# Qt5 support (default for older systems)
qt5 = ["PyQt5>=5.12.0", "PyQtWebEngine>=5.12.0"]

# Qt6 support (recommended for new installations)
qt6 = ["pyqt6>=6.9.1", "pyqt6-webengine>=6.9.0"]

[tool.setuptools.dynamic]
version = { attr = "phylib.__version__" }

[tool.setuptools.packages.find]
include = ["phylib*"]

[tool.setuptools.package-data]
phylib = [
    "*.vert",
    "*.frag",
    "*.glsl",
    "*.npy",
    "*.gz",
    "*.txt",
    "*.html",
    "*.css",
    "*.js",
    "*.prb",
]

[tool.pytest.ini_options]
filterwarnings = [
    "default",
    "ignore::DeprecationWarning:responses",
    "ignore::DeprecationWarning:cookies",
    "ignore::DeprecationWarning:socks",
    "ignore::DeprecationWarning:matplotlib",
    "ignore:numpy.ufunc",
]
testpaths = ["phylib"]
addopts = "--cov=phylib --cov-report=term-missing"

[tool.coverage.run]
branch = false
source = ["phylib"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise",
    "except IOError:",
    "pass",
    "return$",
    "continue$",
]
show_missing = true

[tool.ruff]
line-length = 99
target-version = "py39"

[tool.ruff.lint]
select = ["E", "F", "W", "I", "N", "UP", "B", "C4", "SIM", "PIE", "NPY201"]
ignore = [
    "E265",   # block comment should start with '# '
    "E731",   # do not assign a lambda expression, use a def
    "E741",   # ambiguous variable name
    "W605",   # invalid escape sequence,
    "N806",
    "SIM102",
    "B007",
    "N803",
    "N802",
    "B018",
    "F401",
    "SIM118",
    "B015",
    "C416",
    "E402",
    "E501",
    "SIM108",
    "SIM115",
    "UP028",
]

[tool.ruff.lint.isort]
known-first-party = ["phylib"]

[tool.ruff.format]
quote-style = "single"
indent-style = "space"

[tool.uv]
dev-dependencies = [
    "pytest>=6.0",
    "pytest-qt>=4.0",
    "pytest-cov>=3.0",
    "ruff>=0.1.0",
    "coverage>=6.0",
    "coveralls>=3.0",
    "memory_profiler>=0.60",
    "mkdocs>=1.4",
]
